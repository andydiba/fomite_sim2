#example config file
#
# $key = value   or  $key = value0, value1, value2    etc...   i.e. value(s) are in CSV format
# Note: 
#	1.	spaces/tabs are ignored, so $N=5,35  is the same as $N = 5 ,35  or $ N  =  5  ,  3 5
#	2.	key and string values are case sensitive
#	3.	all values are stored as character strings (typecasting e.g. atof occurs within program.)
#	4.1 Essential keys are in CAPITALS, lowercase are arbitrary 'labels' for keys with scope within config file that 'point' to another data structure.
#	4.2 Values can 'point' to another key label for making complex data structures (see ^)
#	5.	Don't insert comments '#' on same line as key=value
#	6.	Can't use maths i.e. DON'T do  $key = 60*60*24 
#	7.	Watch out for empty spaces on lines left blank! (they should all be LF/CR). Also max key size ~80, max value ~280 characters.
#	



#Simulates 3 zones (A,B,C) where a with 1 zone (A) initially contaminated.
# People visit A,B,C in sequence (once each)
#1 person only visits B, another 1 person only visits C  ~after main population has visited all of them
# It's of interest to see the risk of infection from secondary+ sources
#should probably assess vs. ID50  and or pathogen SHED


#time resolution and duration in minutes (integers) 
$RES_MIN = 1
$DURATION_MIN = 1440

#deposit and pickup rates of pathogens
$DEPOSIT = 0.05, 0.30, 0 ,1
$PICKUP = 0.27, 0.30, 0 , 1

#deposit rate onto face and environment (e.g. clothes)
$FACE = 0.35 , 0.1, 0 , 0.6
$ENVR = 0.05, 0.1, 0 , 0.6



#Pathogen related parameters 

#infectious dose
$PATHOGEN_ID50 =    1

#shedding  ~ Uniform(a,b) (tip! set a=b for constant (non random) shedding)  light ~1000  heavy 10^6 
#$PATHOGEN_SHED = 100 , 100000
$PATHOGEN_SHED = 1000 , 1000


#time constant (decay rate) in mucus
$PATHOGEN_INOC_PERIOD_MIN = 20

#loss due to decay on surface and hands
$PATHOGEN_DECAY_FOMITE = 0.8
$PATHOGEN_DECAY_HANDS = 0.01




#Define some fomite parameter 'types' using truncated-Gaussian-(mode,sd,a,b)
# + a rate parameter L (uses/minute) or 1/L=average time per use (minutes)

#	e.g. mcd menu: 12 touches (avg) [10,40] (sd=3.5) and takes 1/0.5 = 2 minutes (avg)
$mcd_menu = 12, 3.5, 10, 40, 0.5


#Define some Markov-Chains  
#Note: -each entry should sum to 1 and there should be one entry for each distinct 'zone'
#	   -each entry actually forms the COLUMNS of the MK chain state-transition matrix 
#		(though we input them as a ROW of csv values, so what you see is the transpose of the state transition matrix)
#
#	i.e. 3 zones (called 'a','b' and 'c')
#
#		$a = P(a|a)  , P(b|a)  , P(c|a)
#		$b = P(a|b)  , P(b|b)  , P(c|b)
#		$c = P(a|c)  , P(b|c)  , P(c|c)
#


$a = 0.0  , 1.0  , 0.0
$b = 0.0  , 0.0  , 1.0
$c = 1.0  , 0.0  , 0.0


#Zones (or 'Locations') and fomite parameters (should all be #ZONES in length)

# no. of zones
$ZONES = 3
#rate of departure from zones (persons/minute)
$ZONE_L = 0.5 , 0.5 , 0.5
#markov chains (in this case also the convention for labelling each zone)
$ZONE_MC = a,  b,  c

#no. fomites (e.g. touchscreens) at each location
$FOMITES = 1 , 1 , 1
# 'type' of fomite at each location
$FOMITE_TYPE = mcd_menu, mcd_menu, mcd_menu
#Initially contaminated ? (boolean) with PATHOGEN_SHED amount 
$CONTAMINATED = 1, 0 , 0
#decontamination rate at each zone
$CLEAN_RATE_HR = 0, 0, 0

#Pool (people, disease prevalence, rate of departure, markov chain etc.)
#To do?: no. jumps could be a random number too  and could add 'delay' as well as rate to zones/pools

#no. of initial population pools
$POOLS = 3
#rate of departure from each pools
$POOL_L = 0.5 , 0.025 , 0.0125
#markov chains dictate where population goes to first 
#(in this case we recycle existing data structures a,b,c so people behave as if they were initially at that location e.g. c->a,a->b,b->c)
$POOL_MC = c , a, b
#no. people in each pool
$PEOPLE = 10, 1 , 1
#max no. of 'jumps' to new locations during simulation (assigned to each pool)
$JUMPS = 3 , 1 , 1




